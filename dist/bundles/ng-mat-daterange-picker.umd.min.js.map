{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-mat-daterange-picker/src/app/modules/ngx-mat-drp/services/range-store.service.ts","ng://ng-mat-daterange-picker/src/app/modules/ngx-mat-drp/services/config-store.service.ts","ng://ng-mat-daterange-picker/src/app/modules/ngx-mat-drp/picker-overlay/picker-overlay.animations.ts","ng://ng-mat-daterange-picker/src/app/modules/ngx-mat-drp/picker-overlay/picker-overlay.component.ts","ng://ng-mat-daterange-picker/src/app/modules/ngx-mat-drp/services/calendar-overlay.service.ts","ng://ng-mat-daterange-picker/src/app/modules/ngx-mat-drp/ngx-mat-drp/ngx-mat-drp.component.ts","ng://ng-mat-daterange-picker/src/app/modules/ngx-mat-drp/calendar-wrapper/calendar-wrapper.component.ts","ng://ng-mat-daterange-picker/src/app/modules/ngx-mat-drp/presets/presets.component.ts","ng://ng-mat-daterange-picker/src/app/modules/ngx-mat-drp/ngx-mat-drp.module.ts"],"names":["Object","setPrototypeOf","__assign","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","DATE","InjectionToken","RangeStoreService","_fromDate","_toDate","this","rangeUpdate$","Subject","updateRange","fromDate","toDate","next","Date","type","Inject","args","Injectable","ConfigStoreService","defaultOptions","excludeWeekends","animation","locale","fromMinMax","toMinMax","_ngxDrpOptions","options","pickerOverlayAnimations","transformPanel","trigger","state","style","opacity","transform","transition","group","animate","PickerOverlayComponent","rangeStoreService","configStoreService","overlayRef","presets","ngOnInit","startDatePrefix","ngxDrpOptions","endDatePrefix","applyLabel","cancelLabel","shouldAnimate","_a","fromMinDate","fromMaxDate","_b","toMinDate","toMaxDate","updateFromDate","date","updateToDate","updateRangeByPreset","presetItem","range","applyNewDates","e","disposeOverLay","discardNewDates","dispose","OverlayRef","Component","selector","template","animations","encapsulation","ViewEncapsulation","None","DEFAULT_CONFIG","panelClass","hasBackdrop","backdropClass","shouldCloseOnBackdropClick","CalendarOverlayService","overlay","injector","open","config","hostElemRef","overlayConfig","createOverlay","portalInjector","createInjector","calendarPortal","ComponentPortal","attach","backdropClick","pipe","takeWhile","subscribe","getOverlayConfig","create","positionStrategy","position","flexibleConnectedTo","withFlexibleDimensions","withViewportMargin","withDefaultOffsetY","withPositions","originX","originY","overlayX","overlayY","OverlayConfig","scrollStrategy","scrollStrategies","block","injectionTokens","WeakMap","set","PortalInjector","Overlay","Injector","NgxMatDrpComponent","changeDetectionRef","calendarOverlayService","datePipe","selectedDateRangeChanged","EventEmitter","selectedDateRange","_this","placeholder","from","formatToDateString","format","to","emit","detectChanges","ngOnDestroy","unsubscribe","openCalendar","event","calendarOverlayConfig","calendarInput","resetDates","ChangeDetectorRef","DatePipe","ViewChild","static","Output","Input","providers","changeDetection","ChangeDetectionStrategy","OnPush","CalendarWrapperComponent","configStore","selectedDateChange","weekendFilter","dateFormat","day","getDay","ngOnChanges","changes","matCalendar","activeDate","selectedDate","currentValue","onSelectedChange","onYearSelected","onUserSelection","MatCalendar","PresetsComponent","presetChanged","setPresetPeriod","NgxMatDrpModule","NgModule","imports","CommonModule","MatFormFieldModule","MatDatepickerModule","MatNativeDateModule","MatInputModule","MatButtonModule","MatTooltipModule","OverlayModule","declarations","provide","useValue","Éµ0","entryComponents","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Inject, InjectionToken } from '@angular/core';\r\nimport { Range } from '../model/model';\r\nimport { Subject } from 'rxjs';\r\n/* import { DATE } from '../ngx-drp.module'; */\r\n\r\nexport const DATE = new InjectionToken<Date>('date');\r\n\r\n@Injectable()\r\nexport class RangeStoreService {\r\n  rangeUpdate$: Subject<Range> = new Subject<Range>();\r\n\r\n  constructor(\r\n    @Inject(DATE) private _fromDate: Date,\r\n    @Inject(DATE) private _toDate: Date\r\n  ) {}\r\n\r\n  /* set fromDate(fromDate:Date) {\r\n    this._fromDate = fromDate;\r\n  } */\r\n\r\n  get fromDate(): Date {\r\n    return this._fromDate;\r\n  }\r\n\r\n  /* set toDate(toDate:Date) {\r\n    this._toDate = toDate;\r\n  } */\r\n\r\n  get toDate(): Date {\r\n    return this._toDate;\r\n  }\r\n\r\n  updateRange(fromDate: Date = this._fromDate, toDate: Date = this._toDate) {\r\n    this._fromDate = fromDate;\r\n    this._toDate = toDate;\r\n    this.rangeUpdate$.next({ fromDate: this._fromDate, toDate: this._toDate });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxDrpOptions } from '../model/model';\r\n\r\n@Injectable()\r\nexport class ConfigStoreService {\r\n  private _ngxDrpOptions: NgxDrpOptions;\r\n  private defaultOptions = {\r\n    excludeWeekends: false,\r\n    animation: true,\r\n    locale: 'en-US',\r\n    fromMinMax: { fromDate: null, toDate: null },\r\n    toMinMax: { fromDate: null, toDate: null }\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  get ngxDrpOptions(): NgxDrpOptions {\r\n    return this._ngxDrpOptions;\r\n  }\r\n\r\n  set ngxDrpOptions(options: NgxDrpOptions) {\r\n    this._ngxDrpOptions = { ...this.defaultOptions, ...options };\r\n  }\r\n}\r\n","import {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n  group\r\n} from '@angular/animations';\r\n\r\nexport const pickerOverlayAnimations: {\r\n  readonly transformPanel: AnimationTriggerMetadata;\r\n} = {\r\n  /** Transforms the height of the picker overlay content. */\r\n  transformPanel: trigger('transformPickerOverlay', [\r\n    state('void', style({opacity: 0, transform: 'scale(1, 0)'})),\r\n    state('enter', style({opacity: 1, transform: 'scale(1, 1)'})),\r\n    transition('void => enter', group([\r\n      animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\r\n    ])),\r\n    transition('* => void', animate('100ms linear', style({opacity: 0})))\r\n  ])\r\n};\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { PresetItem, NgxDrpOptions } from '../model/model';\r\nimport { RangeStoreService } from '../services/range-store.service';\r\nimport { OverlayRef } from '@angular/cdk/overlay';\r\nimport { ConfigStoreService } from '../services/config-store.service';\r\nimport { pickerOverlayAnimations } from './picker-overlay.animations';\r\n\r\n@Component({\r\n  selector: 'ngx-mat-drp-picker-overlay',\r\n  templateUrl: './picker-overlay.component.html',\r\n  styleUrls: ['./picker-overlay.component.css'],\r\n  animations: [pickerOverlayAnimations.transformPanel],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PickerOverlayComponent implements OnInit {\r\n  fromDate: Date;\r\n  toDate: Date;\r\n  fromMinDate: Date;\r\n  fromMaxDate: Date;\r\n  toMinDate: Date;\r\n  toMaxDate: Date;\r\n  presets: Array<PresetItem> = [];\r\n  startDatePrefix: string;\r\n  endDatePrefix: string;\r\n  applyLabel: string;\r\n  cancelLabel: string;\r\n  shouldAnimate: string;\r\n\r\n  constructor(\r\n    private rangeStoreService: RangeStoreService,\r\n    private configStoreService: ConfigStoreService,\r\n    private overlayRef: OverlayRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.fromDate = this.rangeStoreService.fromDate;\r\n    this.toDate = this.rangeStoreService.toDate;\r\n    this.startDatePrefix = this.configStoreService.ngxDrpOptions.startDatePrefix || 'FROM:';\r\n    this.endDatePrefix = this.configStoreService.ngxDrpOptions.endDatePrefix || 'TO:';\r\n    this.applyLabel = this.configStoreService.ngxDrpOptions.applyLabel || 'Apply';\r\n    this.cancelLabel = this.configStoreService.ngxDrpOptions.cancelLabel || 'Cancel';\r\n    this.presets = this.configStoreService.ngxDrpOptions.presets;\r\n    this.shouldAnimate = this.configStoreService.ngxDrpOptions.animation\r\n      ? 'enter'\r\n      : 'noop';\r\n    ({\r\n      fromDate: this.fromMinDate,\r\n      toDate: this.fromMaxDate\r\n    } = this.configStoreService.ngxDrpOptions.fromMinMax);\r\n    ({\r\n      fromDate: this.toMinDate,\r\n      toDate: this.toMaxDate\r\n    } = this.configStoreService.ngxDrpOptions.toMinMax);\r\n  }\r\n\r\n  updateFromDate(date) {\r\n    this.fromDate = date;\r\n  }\r\n\r\n  updateToDate(date) {\r\n    this.toDate = date;\r\n  }\r\n\r\n  updateRangeByPreset(presetItem: PresetItem) {\r\n    this.updateFromDate(presetItem.range.fromDate);\r\n    this.updateToDate(presetItem.range.toDate);\r\n  }\r\n\r\n  applyNewDates(e) {\r\n    this.rangeStoreService.updateRange(this.fromDate, this.toDate);\r\n    this.disposeOverLay();\r\n  }\r\n\r\n  discardNewDates(e) {\r\n    // this.rangeStoreService.updateRange();\r\n    this.disposeOverLay();\r\n  }\r\n\r\n  private disposeOverLay() {\r\n    this.overlayRef.dispose();\r\n  }\r\n}\r\n","import { Injectable, ElementRef, Injector } from '@angular/core';\r\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\r\nimport { NgxDrpOptions, CalendarOverlayConfig } from '../model/model';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { PickerOverlayComponent } from '../picker-overlay/picker-overlay.component';\r\n\r\nconst DEFAULT_CONFIG: CalendarOverlayConfig = {\r\n  panelClass: 'ngx-mat-drp-overlay',\r\n  hasBackdrop: true,\r\n  backdropClass: 'ngx-mat-drp-overlay-backdrop',\r\n  shouldCloseOnBackdropClick: true\r\n};\r\n\r\n@Injectable()\r\nexport class CalendarOverlayService {\r\n  private hostElemRef: ElementRef;\r\n\r\n  constructor(private overlay: Overlay, private injector: Injector) {}\r\n\r\n  open(\r\n    config: CalendarOverlayConfig = {},\r\n    hostElemRef: ElementRef\r\n  ): OverlayRef {\r\n    this.hostElemRef = hostElemRef;\r\n    const overlayConfig = { ...DEFAULT_CONFIG, ...config };\r\n    const overlayRef = this.createOverlay(overlayConfig);\r\n    const portalInjector = this.createInjector(overlayRef);\r\n    const calendarPortal = new ComponentPortal(\r\n      PickerOverlayComponent,\r\n      null,\r\n      portalInjector\r\n    );\r\n    overlayRef.attach(calendarPortal);\r\n\r\n    overlayRef\r\n      .backdropClick()\r\n      .pipe(takeWhile(() => overlayConfig.shouldCloseOnBackdropClick))\r\n      .subscribe(() => overlayRef.dispose());\r\n\r\n    return overlayRef;\r\n  }\r\n\r\n  private createOverlay(config: CalendarOverlayConfig): OverlayRef {\r\n    const overlayConfig = this.getOverlayConfig(config);\r\n    return this.overlay.create(overlayConfig);\r\n  }\r\n\r\n  private getOverlayConfig(config: CalendarOverlayConfig): OverlayConfig {\r\n    const positionStrategy = this.overlay\r\n      .position()\r\n      .flexibleConnectedTo(this.hostElemRef)\r\n      .withFlexibleDimensions(false)\r\n      .withViewportMargin(8)\r\n      .withDefaultOffsetY(12)\r\n      .withPositions([\r\n        {\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        },\r\n        {\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'bottom'\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'bottom',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'end',\r\n          overlayY: 'bottom'\r\n        }\r\n      ]);\r\n\r\n    const overlayConfig = new OverlayConfig({\r\n      hasBackdrop: config.hasBackdrop,\r\n      backdropClass: config.backdropClass,\r\n      panelClass: config.panelClass,\r\n      scrollStrategy: this.overlay.scrollStrategies.block(),\r\n      positionStrategy\r\n    });\r\n\r\n    return overlayConfig;\r\n  }\r\n\r\n  private createInjector(overlayRef: OverlayRef): PortalInjector {\r\n    const injectionTokens = new WeakMap();\r\n    injectionTokens.set(OverlayRef, overlayRef);\r\n\r\n    return new PortalInjector(this.injector, injectionTokens);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { OverlayRef } from '@angular/cdk/overlay';\r\nimport { CalendarOverlayService } from '../services/calendar-overlay.service';\r\nimport { RangeStoreService } from '../services/range-store.service';\r\nimport { Range, NgxDrpOptions } from '../model/model';\r\nimport { ConfigStoreService } from '../services/config-store.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ngx-mat-drp',\r\n  templateUrl: './ngx-mat-drp.component.html',\r\n  styleUrls: ['./ngx-mat-drp.component.css'],\r\n  providers: [\r\n    CalendarOverlayService,\r\n    RangeStoreService,\r\n    ConfigStoreService,\r\n    DatePipe\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgxMatDrpComponent implements OnInit, OnDestroy {\r\n  @ViewChild('calendarInput', {static: false})\r\n  calendarInput;\r\n  @Output()\r\n  readonly selectedDateRangeChanged: EventEmitter<Range> = new EventEmitter<Range>();\r\n  @Input()\r\n  options: NgxDrpOptions;\r\n  private rangeUpdate$: Subscription;\r\n  selectedDateRange = '';\r\n\r\n  constructor(\r\n    private changeDetectionRef: ChangeDetectorRef,\r\n    private calendarOverlayService: CalendarOverlayService,\r\n    public rangeStoreService: RangeStoreService,\r\n    public configStoreService: ConfigStoreService,\r\n    private datePipe: DatePipe\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.configStoreService.ngxDrpOptions = this.options;\r\n    this.options.placeholder = this.options.placeholder || 'Choose a date';\r\n    this.rangeUpdate$ = this.rangeStoreService.rangeUpdate$.subscribe(range => {\r\n      const from: string = this.formatToDateString(\r\n        range.fromDate,\r\n        this.options.format\r\n      );\r\n      const to: string = this.formatToDateString(\r\n        range.toDate,\r\n        this.options.format\r\n      );\r\n      this.selectedDateRange = `${from} - ${to}`;\r\n      this.selectedDateRangeChanged.emit(range);\r\n    });\r\n\r\n    this.rangeStoreService.updateRange(\r\n      this.options.range.fromDate,\r\n      this.options.range.toDate\r\n    );\r\n    this.changeDetectionRef.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.rangeUpdate$) {\r\n      this.rangeUpdate$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private formatToDateString(date: Date, format: string): string {\r\n    return this.datePipe.transform(date, format);\r\n  }\r\n\r\n  openCalendar(event) {\r\n    const overlayRef: OverlayRef = this.calendarOverlayService.open(\r\n      this.options.calendarOverlayConfig,\r\n      this.calendarInput\r\n    );\r\n  }\r\n\r\n  public resetDates(range: Range) {\r\n    this.rangeStoreService.updateRange(\r\n      range.fromDate,\r\n      range.toDate\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ViewChild,\r\n  Output,\r\n  Input,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { MatCalendar } from '@angular/material/datepicker';\r\nimport { ConfigStoreService } from '../services/config-store.service';\r\n\r\n@Component({\r\n  selector: 'calendar-wrapper',\r\n  templateUrl: './calendar-wrapper.component.html',\r\n  styleUrls: ['./calendar-wrapper.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CalendarWrapperComponent implements OnChanges {\r\n  @ViewChild(MatCalendar, {static: false})\r\n  matCalendar: MatCalendar<Date>;\r\n\r\n  @Output()\r\n  readonly selectedDateChange: EventEmitter<Date> = new EventEmitter<Date>();\r\n\r\n  dateFormat: string;\r\n  @Input() selectedDate: Date;\r\n  @Input() prefixLabel: string;\r\n  @Input() minDate: Date;\r\n  @Input() maxDate: Date;\r\n  weekendFilter = (d: Date) => true;\r\n\r\n  constructor(private configStore: ConfigStoreService) {\r\n    this.dateFormat = configStore.ngxDrpOptions.format;\r\n    if (configStore.ngxDrpOptions.excludeWeekends) {\r\n      this.weekendFilter = (d: Date): boolean => {\r\n        const day = d.getDay();\r\n        return day !== 0 && day !== 6;\r\n      };\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // Necessary to force view refresh\r\n    this.matCalendar.activeDate = changes.selectedDate.currentValue;\r\n  }\r\n\r\n  onSelectedChange(date) {\r\n    this.selectedDateChange.emit(date);\r\n  }\r\n\r\n  onYearSelected(e) {}\r\n\r\n  onUserSelection(e) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { PresetItem } from '../model/model';\r\n\r\n@Component({\r\n  selector: 'mat-drp-presets',\r\n  templateUrl: './presets.component.html',\r\n  styleUrls: ['./presets.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PresetsComponent implements OnInit {\r\n  @Input()\r\n  presets: Array<PresetItem>;\r\n  @Output()\r\n  readonly presetChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  setPresetPeriod(event) {\r\n    this.presetChanged.emit(event);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxMatDrpComponent } from './ngx-mat-drp/ngx-mat-drp.component';\r\nimport { PickerOverlayComponent } from './picker-overlay/picker-overlay.component';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\nimport { CalendarWrapperComponent } from './calendar-wrapper/calendar-wrapper.component';\r\nimport { PresetsComponent } from './presets/presets.component';\r\nimport { DATE } from './services/range-store.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    OverlayModule\r\n  ],\r\n  declarations: [\r\n    NgxMatDrpComponent,\r\n    CalendarWrapperComponent,\r\n    PickerOverlayComponent,\r\n    PresetsComponent\r\n  ],\r\n  providers: [\r\n    {provide: DATE, useValue: new Date()}\r\n  ],\r\n  entryComponents: [PickerOverlayComponent],\r\n  exports: [NgxMatDrpComponent]\r\n})\r\nexport class NgxMatDrpModule { }\r\n"]}